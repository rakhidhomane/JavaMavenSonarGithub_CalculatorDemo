name: Java CI with SonarQube and JFrog

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
   workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Java environment
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    # Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    # Build the project
    - name: Build with Maven
      run: mvn clean install

    # Run SonarQube analysis
    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    # Publish snapshot to JFrog
    - name: Publish to JFrog
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      run: |
        mvn deploy -DaltDeploymentRepository=artifactory::default::https://<jfrog-server>/artifactory/libs-snapshot-local \
        -Dartifactory.user=${{ secrets.JFROG_USER }} \
        -Dartifactory.password=${{ secrets.JFROG_PASSWORD }}
